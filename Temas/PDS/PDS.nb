(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    631929,      12031]
NotebookOptionsPosition[    628152,      11933]
NotebookOutlinePosition[    628495,      11948]
CellTagsIndexPosition[    628452,      11945]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Tarea II Error Cuadratico Medio", "Section"]], \
"Subsection",
 CellChangeTimes->{{3.7138157215889845`*^9, 
  3.7138157362490587`*^9}},ExpressionUUID->"1d1188d8-776f-439b-a013-\
90d379de8c0b"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
4cjPz1d1EAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC+DmnT59OTk5WdSgI
giCUys2bNw8ePLiPx86dO/fu3bt169a5c+dy28p8/fq1S5cu6enp+fn5z58/
j4+P//Dhg2rDTBAEoWiKi4sHDx48fPjwbdu2GRkZ6ejoLFu2zMfHp1OnTtyO
M0lJSdOnT//+/fuqVaugk3379m3cuPHJkydVG3KCIAiFAjvQycnp9evXMBHN
zc3nzZuHk/fu3YNgctfMmDEDCvnmzZtmzZoNHDjw3bt3zs7OEEla9ZEgiCoM
3OrRo0eX8ta/VVNTu3z5Mo4PHDjg6enJLoBD7efnV1hYmJmZ6ejo6OvrCzNy
0KBBenp6r169UmHICYIglMOOHTvU1dXfvn0rcP7WrVthYWHsGFIJZ/zOnTv1
6tVbvnw5246BIAiiahMQEDB06FCuvZEBMYSXza+ZycnJffr0mTlzJtu6iyAI
omrz9etXCwuLlStXCpzPy8vz9/fnNBP+dXBw8NSpUzMyMiCbtJ0rQRBVmKKi
oqdPn27atElNTW3ZsmX37t3j/zY6Onrfvn3suLCwcN68eaamprAzoZkDBgxg
+8ASBEFUSV68eNGjRw9vb28vL68RI0YYGxt//PiRfQWjETL4+fNn9hEWIy4L
5DFx4sTp06erLtQEQRDKgOthwQG/QQidhDyWlJRwZ378N8oOKEEQRMUgLCzs
5s2bqg4FQRBExaKoqMjOzq76jGzMy8uLj49XiUlcXFx84sQJ2sCCICovVXiU
Y3Z2tq+vb8eOHVWy7MbDhw//+OOPSZMm0VgpgpAjKFC3b9+Oioq6c+fOp0+f
FPSUnJycDRs2dOnSZcuWLVxPTZWhsLAwKCjI0tIyLS1N4Ks3b95cvXr1/Pnz
L168UGg3PdKxc+fOCAYNBiAIufD27VsHBwczMzNTU9NatWq5uLg8f/5cEQ+C
KjZt2lRfXx9GzoULFxTxCBVy/fp12I2oXwTOo94xMTGBbOLdEb0zZ84UnlIk
RxCA9u3bHzx4UHGPIIjqw6hRo5o1a4YCBd9w6NChampqs2fP5u9olgsJCQka
GhqBgYF9+/bFI5YuXSrf+6uWDx8+GBkZRUdHC5zPy8uDMBoYGNy8eRMxwN59
27ZtCg3M7t27W7VqJTD0lCCI8oLyy8rs8uXL8fHly5c4NjY2zs3Nle+DFi1a
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
+vVRcQcFBf3222+STx/bunXrjh07IvnYuXMn/u/igWNcoNDAi4F1XuDVYJxI
bRVPnjwZ6vTHH3/AunZxcenSpQtqE+gbJHfMmDHsGmgvBJA1csKawjF/TxCe
DtHjH6p0/PhxxPbmzZthjnbr1g0aAjMM2oinmJqaQh7hsxsYGOBuGhoa3t7e
UEscwDTl7+NIT0/HBQLCqzRu3rwJ9WZd4RC6YcOGxcbGCl82fvx4XMAm1HPc
uHGjTZs2qGtgIj558gQv3rx5cxMTE0QvjnG9ubk54nbJkiXKehuCKBPW8Ij/
OD537hyOJdc05PwtW7bs4GPbtm3cMb6SZL6bgsjIyDAzM8PrrFmzRpb7sNHX
UDnOqGatZ+PGjeO/jA0j5HaM5cBlKPv8C/BCPOvVq7d69WqYVQcOHIAmQMmz
s7NxGZNHXHPs2DHcDbIDYf/69StEUl9fn7+Tms3aE97UW5lMnz69UaNGYvqS
mDzyxwm8aagfahmuXSI8PJxpLF6TLa/BhqMThMqBVcNmNzA/8ezZs8ifISEh
Cn0ohKuhZMhifH748KFu3bqyLx0DT1AgTt69e9exY0eUaP7LZs2ahcuEBzrC
14aW4pW5M7AemzRpgosbNGgA7xJxXsrrZGdrAjN5ZIOx2dqMJSUlMIOhKvy9
yaiYxM+U9PT0lDCSywWCwe6flZXVvXv3vn37ihnDzxo3+IcNoMbEGX7HmY28
OnnyJItDeNk00YaoIMAQQkn38PBgA/YWLlyIvHr06FEU57i4ODaiAzrDrf4n
AEr6QbGIbJLKLA9SvxpCjneBQso4XwbGj8Doa8gUpIzfekTswQhkw2xevnyJ
GOO+wmWQR/4i/+zZM+geLCsrK6s6deqwRSFQPbFhMEwe2ZpgkZGRpbwGTCSQ
kZER/wgZFircpKxglyuSpUgRNh2Jzdm5cuWKyN4ZvDu/9VhYWOjm5oYz3PBy
ZDA7OzsY5zCe2SgsNhw9OTm56k0CJSodqampKHcofThOS0tDgUX+fP78ubOz
c/369QcMGIADHR0d+Hoif+7j44MMP7oMYF9xDXTKh5kuPx0Z+FMmT54MHUD5
5c5AIrp16zZy5EjuDBxwuJnMAXdxceE3LHESusffdT5hwgRbW9tS3oRK5n4+
fPhQwHpkk3127dpV+q/1iG/5JQgmGS4QcPCVyenTp9mcwTdv3sAYFukRM3nk
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
ajU=
     "], {{0, 302}, {437, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{442., Automatic},
   ImageSizeRaw->{437, 302},
   PlotRange->{{0, 437}, {0, 302}}], 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
18I=
     "], {{0, 139}, {286, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{277.5, Automatic},
   ImageSizeRaw->{286, 139},
   PlotRange->{{0, 286}, {0, 139}}]}]], "Input",
 CellChangeTimes->{{3.71381568357543*^9, 3.713815704352259*^9}, {
  3.7138157657688837`*^9, 3.7138157675217195`*^9}, {3.713816113541329*^9, 
  3.713816139022417*^9}},ExpressionUUID->"be54e199-b08e-4fdf-92e2-\
3dd95ce3b0d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "t"}], "]"}]}], "-", "0"}], ")"}], "*", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "2"}], ")"}]}], "]"}]}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"A", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "t"}], "]"}]}]}], ")"}], "*", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"Pi", "/", "2"}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{
         RowBox[{"-", "T"}], "/", "2"}], ",", 
        RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "N"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "*", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "T"}], "/", "2"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"T", "/", "2"}], ")"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", "N"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"f", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "T"}], "/", "2"}], ")"}], ",", 
        RowBox[{"(", 
         RowBox[{"T", "/", "2"}], ")"}]}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Fs", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["a", "0"], "/", "2"}], ")"}], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "N"], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
         "]"}]}], ",", 
       RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["b", "N"], "*", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
          "]"}]}], ")"}], ",", 
       RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EK", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "T"}], ")"}], "*", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "T"}], "/", "2"}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{"T", "/", "2"}], ")"}]}], "}"}]}], "]"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t] 3 Terminos\>\""}], "}"}]}]}],
   "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{
   "\"\<f(t)= \>\"", ",", "f", ",", 
    "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
    SubscriptBox["a", "0"], ",", 
    "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
    SubscriptBox["a", "N"], ",", 
    "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
    SubscriptBox["b", "N"], ",", 
    "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
    "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
    "EK"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzFsoQwEcBvC1jTyQlrmEcubSWPKgSNiiJZeYjfKCJfdLLFYyY1FuuZt7
GXkjsRJyLSEl1Diyh5lQFqPJMLSU852Hf7++vq8/r1iRU8ZkMBgEddB7L8DW
ufSSTDQefMBKp/kbbqkUrl2UhheSC6MD3XzgK78iGCb0HUZCSX15DDzPWhDC
y8UUCfx08aiArRx5PawlgxpgIqlWw5+nmnaocfwM0f9zw0bh/LSbtZvSwmF/
wDp50h+cirrx7KG8Yx75QXuLkw9L55qi6FxwHAfFql0htLGexbBSr8yHa/f2
Kkhk1tbR/W9YM3RkXOlgdNn6Cjw4/9L0UrpaTe1ww+E1CM/UOtpjvfMUWo+E
RkhEnpih78TIA/QPSX2D14Wyd6gNUkb0UTINzbSa7R4RvO4uSYbcW50M2gbk
eXCMvSjqpxSsstKhwXiRD0ltbBHsIAWlcCBcVAVDecQynNlp3YRt4fsXcNyz
w0jvqicf4Sw73gLTzoaz9ZTuJqkU/gOHFBrK
  "],ExpressionUUID->"3a80a1d5-99df-44d8-b855-e948842f6767"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
k24vWVwYGttNqU95BwoWOUNpPDJe1nTTrjcJcIs96/JX0XFY57txfozxCxiL
dxT8lh0Hn2alQPNVj+HMvqxbTcrjcLr+2ZKYLUHQJJCeSdcah//9Hron1T6c
oyt0wbFPSuLrhTaQloqdu0Xo1zknFi/aLbTi6cz3BoeE5n07lm11Vmh3r3Tj
ExeFbtMQK3G7JnTxtbTq4HChH6yfxijOFXphcuLC9dK8KYcdmXhlMVdoEcl9
yw+qCd3jPL72gqHQqWp79iYfFdokYuiGerLQDn6bqRJ7Jqa8wrmsjmkjNNvq
YEmdo9B3FrvHJ/gKnVIVcwwShB5fMlHlwxM6oiY3p/fd5JS/6ay//01MMGVt
qXza6x0ipv+zar6bhVjwtCmL8KYneXVNnzJn/1e770tEp9y8xn7BkltiUz5/
WH62Vov4lFWe9NiKqkpOOe3Yy7fsy1JTPmwcuKPsq/SUM+zOaW2anDllrrT5
jNxDMlO2/mO0TjVKdsrSRjOL8l8IXfS6affxBKH1L/s5xqQJLaueHaLyXeif
7obd84aFNpVc/kh2j5ww/gXu/LT9Qn9o/vHG8rDQah9cvoQ4CT156DVF2k/o
7AR1Y4lEoT1kBn8kJgut7VtgvS1D6Ce7Tpy5nS+019CzxzP+Cr3imKtaQoPQ
nSUbk8zahN4X1VBwgy605PR3OzUHhUY339rCEaF96rbZO/CE/r//f035/wF/
KSqj
          "]]}, Annotation[#, "Charting`Private`Tag$153900#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ohdeCv7//yKQ//+/CPB/ZxCx3Q==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$153900#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t] 3 Terminos\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713810668929346*^9, 3.713810697345825*^9}, 
   3.713810752279142*^9, {3.713810810723483*^9, 3.7138108241244793`*^9}, {
   3.7138108558978343`*^9, 3.7138108866696568`*^9}, {3.713810939642701*^9, 
   3.713810975692154*^9}, 3.713811188223031*^9, {3.7138112359160395`*^9, 
   3.713811279975675*^9}, 3.7138113605540466`*^9, 3.7138114095775185`*^9, 
   3.7138116974750285`*^9, 3.7138118199685087`*^9, {3.713815548144292*^9, 
   3.7138155677625685`*^9}, {3.7138162254017377`*^9, 3.7138162504607887`*^9}, 
   3.7138163062338953`*^9, 3.713816341089493*^9, {3.7138164430942087`*^9, 
   3.7138164591824307`*^9}, 3.71381690866831*^9, {3.7138170879792633`*^9, 
   3.713817099801058*^9}, 3.713817254338159*^9, {3.7138191506322393`*^9, 
   3.7138191757888727`*^9}, 3.713819394315542*^9, {3.713819451621975*^9, 
   3.7138194686753016`*^9}, 3.71382001789144*^9, 3.7138201042226706`*^9, 
   3.7138203132350187`*^9, 
   3.713820473628704*^9},ExpressionUUID->"8ab6710a-00b0-4165-be26-\
92abe44ed432"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "+", "t"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}], "+", 
    RowBox[{"A", " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       FractionBox["\[Pi]", "2"], "+", "t"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t"}], "]"}]}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", "A", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["n", "2"]}], ")"}], " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "A", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], 
     RowBox[{"3", " ", "\[Pi]"}]], "+", 
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], "+", 
    FractionBox[
     RowBox[{"4", " ", "A", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"3", " ", "t"}], "]"}]}], 
     RowBox[{"5", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.002513946885707207`", " ", 
    SuperscriptBox["A", "2"]}]}],
  SequenceForm[
  "f(t)= ", ((-$CellContext`A) 
     HeavisideTheta[Rational[-1, 2] Pi + $CellContext`t]) 
    Sin[2 $CellContext`t] + ($CellContext`A 
     HeavisideTheta[Rational[1, 2] Pi + $CellContext`t]) 
    Sin[2 $CellContext`t], "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", 0, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", 0, 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", ((((-4) $CellContext`A)/(-4 + \
$CellContext`n^2))/Pi) Sin[(Rational[1, 2] $CellContext`n) Pi], 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", ((
      Rational[4, 3] $CellContext`A)/Pi) 
    Sin[$CellContext`t] + ($CellContext`A Cos[$CellContext`t]) 
    Sin[$CellContext`t] + ((Rational[4, 5] $CellContext`A)/Pi) 
    Sin[3 $CellContext`t], 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.002513946885707207 $CellContext`A^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.713817261114747*^9, {3.7138191571739864`*^9, 3.7138191825007267`*^9}, 
   3.713819400857974*^9, {3.713819458193657*^9, 3.713819475907205*^9}, 
   3.713820024711685*^9, 3.7138201114616723`*^9, 3.7138203200049667`*^9, 
   3.7138204736587048`*^9},ExpressionUUID->"1e5ef04b-ff1b-4e53-9780-\
4dcd230402ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 1", "Subsection",
 CellChangeTimes->{{3.7138341057488337`*^9, 3.713834147667883*^9}, {
  3.7138764843137884`*^9, 
  3.7138764843524*^9}},ExpressionUUID->"2354ce20-f040-407c-9409-052f90345277"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"(", "1", ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"T", "/", "2"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", "T"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", "1", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"(", 
           RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "1", ")"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "1", ")"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"T", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"T", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs5", "/.", 
      RowBox[{"T", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.71383200034804*^9, 3.713832088141037*^9}, {
  3.713832152911051*^9, 3.7138322602341385`*^9}, {3.7138323020734644`*^9, 
  3.7138325095547204`*^9}, {3.7138326017217064`*^9, 3.7138326747553296`*^9}, {
  3.7138327152270803`*^9, 3.7138327794064217`*^9}, {3.713832875589222*^9, 
  3.713832906989297*^9}, {3.713833026239947*^9, 3.713833059940179*^9}, {
  3.7138331040080013`*^9, 3.713833303654401*^9}, {3.7138333375168695`*^9, 
  3.7138334140538616`*^9}, {3.713833489314951*^9, 3.7138334902659383`*^9}, {
  3.7138335696307526`*^9, 3.713833638099902*^9}, {3.7138336734465847`*^9, 
  3.71383373891883*^9}, {3.713882264520667*^9, 3.7138823488943615`*^9}, {
  3.7138823816846685`*^9, 3.713882382031535*^9}, {3.7138824481547203`*^9, 
  3.7138825233808804`*^9}},ExpressionUUID->"d481171c-3a97-4510-b3af-\
44b3415461fb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"HeavisideTheta", "[", "t", "]"}], "+", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{"t", "-", "T"}], "]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       FractionBox["T", "2"]}], "]"}]}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}], "2"]}], 
     RowBox[{"n", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], ")"}]}], 
    RowBox[{"3", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", "0.09936725651255307`"}],
  SequenceForm[
  "f(t)= ", HeavisideTheta[$CellContext`t] + 
   HeavisideTheta[$CellContext`t - $CellContext`T] - 2 
   HeavisideTheta[$CellContext`t + Rational[-1, 2] $CellContext`T], 
   "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", 0, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", $CellContext`n^(-1) 
   Pi^(-1) (2 Sin[$CellContext`n Pi] - Sin[2 $CellContext`n Pi]), 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", (-4) $CellContext`n^(-1) Pi^(-1) 
   Cos[$CellContext`n Pi] Sin[Rational[1, 2] $CellContext`n Pi]^2, 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", Rational[4, 3] 
   Pi^(-1) (3 Sin[2 Pi $CellContext`t/$CellContext`T] + 
    Sin[6 Pi $CellContext`t/$CellContext`T]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.09936725651255307],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.713833654631982*^9, 3.713833706506448*^9, 3.7138337531241016`*^9, {
   3.7138823222337065`*^9, 3.713882351269759*^9}, 3.713882386101611*^9, 
   3.7138824515825973`*^9, {3.713882487570136*^9, 3.713882530519206*^9}, 
   3.7138827317164497`*^9},ExpressionUUID->"b71f8709-6fb8-4186-b75e-\
6dc6badebe15"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFzntQEwQcB/DBeMVyImiQhgJOGQRaIrrxGoE8lNfkZaUyAhSdCokcYqBj
BAQWjAMn8oi7RCbCYAhyNxexFFHMQdogKOUlZCKM5ybjuerS3+9797vfff75
/n6WUfHBR7QJBELev/PfPnTBrkujmZQS3qR/xsdoVoWOjI32fzGGPsIsuSfr
QcdZGTQVi9Dc+8N8BxZaQC49ENsyAZ4qf+dpZ6oCXH3DtOvr1ldg17QBahzt
Jfb3ZJM2Sv4Ct5lFDzbqDoNVW+aMOJxBcJFTcmxk1lMwx7atPcD6d/D7DZlD
lZQnYM0G5k+FJx6AWXpq/6hcCVjIXx6Vu6IXKMRvvCZugy95ku9Qg9DtaRTH
SSMxeMci0zz1UhNYd+qGgl9aDw7miC7q+6MZ5uygGbUInPh5WqtYUgfu6xLW
eLkJwfUPdVNZXtfBtUfj6Vuvl4CVZuWCgYBisMsjmUmxsggs2247QfLgg3un
H3oN3+aBj4VbW4Tr54LVkoyF9tCLYLMMhqhuMgNc9bIsx9I1HRxfonxAXccB
19mxP1buSwSXju2VNT46Bf7zvNSRoxUNdrBgu/HjmGCaoloSVLST8b+mGFQ6
mxJifQwcdlFK7e9LAo/teFW9mZ4FDmdKLITcfPA4/2+BIakCLCQmuDK6a8EO
7ofuryyKwb5Szeu6rDtgUthAWNKXMrBdYllLYaEcbCHoLuEW9ILbibUFFct9
4IGY7OP2WUPgW4dzTCs8R/D/7qrdIcoX4L3p5KWOpFEwd49nZ9T2cXC9NC2n
IFEBHnRq2XP39gSYeWWkhfrZJPiOypDOU6NlteGPPbSm3loqHrTWcdNDXzOZ
300noXnev5zYaYQ+Kjwpt12PdjVe7WxJQY/1hRiSaejiG1f+WPBDq9ytkrvO
oPf31rxXV4qmLXqtLfWdBm/aOLgmW4UmXNjN8qHNgjuPJTWaXFaCAwvvuZ9X
qMBDPY4WMvs58BfX8/SoOWqwMt+QcbxjHkyX8Ot9SItgdpyBjUPMEljkUj5L
FCyDfUcPPUsIXcF7/A1tQ9oacEMDMS84FJ3x61h4ayV6vI/1Y0onOmxcvmnn
HNoqLsrObwmtPpv8wU0CwZ3wJv1i6VUXIrptXs+mXRctdAoUhRigC1L4jgOG
aNbyZo/Xq9HebifaucZoO05D4Kp16HnCJwcp69GFOhGJwRS0OtrU8clWdETr
Y1WQDdo23fNswDb0XQ31K18aemZhluPmj2ZO53xrm4gm9zdd1b6HJpznhtJP
a4EXqyJEz421wadKRLnGd9HiD7MN1sQRwe/uS7BLJ+uAe+wfy881o2vKGZSR
CF3wp6Jda8xX0CmZP3CfVeuBq16al5L99cEZ32dG9geiI4MVW+r2o02bm+sD
DqCzeAfvfxeFjtlVPG14Dm2RsdZXX4BeoqWu6qlC9yqGfxPUoHkHGg9730Sv
2AafyWxGP3vCKyfK0eKsuWh5N/qSM8umohftV7ntlkc/WpLc8ZA7ir5s78jb
P44+/bws1HISTfU/OfCzEq2j1XUtfw492OTMjlxAN7Mrtn+0jC7aRFJpNOh/
AC6JdFU=
          "]]}, Annotation[#, "Charting`Private`Tag$46204#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9KElFS7ZGVMQPmemtJrmaaW2lGWK2VMQoP62ZcsqCoffBxfdzZ2Cz8uX6i9U
ofnQzc2dXTgF3L8HPiXTPBgCVsomZVPweEfsI8k1FJ4V3Vr9qXoKXpLKurpr
KdxcK+u9uGEK1PvjlNXWUSgcPaV5rWUKNGTTUxpoHm1wbmlq7JgCo84MIxOa
V99vQr+d7CnwTGk67kvz7A2emC2x/VPwaLeG5Q2ad/eX+HYLUlMgsDTwrQ7N
w3KhDs+cxqcgOaQm5yOtOXZ79ctmpuD74S9L2LT+oaE2qM0/DbprG5Z30Prx
qEjE83nT4LWr3TSc1ja/iP3jC6bhGr+r8mJaawWUjR9fPA1xAgqy/+d5niOf
4lFmGrRqYxJ30PZUKj49rCRPfz4r6Wg/vQ/EcC7zPVCahsVHxd8eo/25nHE4
pU9tGrgGyYvv0ny9y3ezjem6abh179kaJ5qvFx+QEUvVmQYrnr5LIjRfdy2d
/Ca1bRr+/RF2c6D3la8dTeeu75yGk06Xs6/T+8z9j9lSLQbTcIi/q9lQgUIr
j6g8hhF9vqv56arlFKoa+FyKM50GC52+TklZCscXnF457/A0VF9VHRaTorCo
YXfZeetpMCsq0ED6Pji7zlPXcZgGvrNJnvuFKXzze4PLdqdpaJQsuuVF83Xz
8pOf9F2ngZdx5u1Fmq9NSz5vMveYBv1D/60Ppfn6wapmjyNe0/CHcU+wiEPX
z3WhHza+08BOuNWY2UPiBrXju/4LmIbbNdEedf9IPH/73j23p9NwRnEj8tH7
ZVzdpyLP0GmoOHGHt5/eP6XvCZj5R0/D+Oqah5M/SJxq/3g84cs0qF05dp0K
J3HjtobI5G/TkD/1+5zIM5rHg/g6vuZMg+/Cr7FNfiQydx5xzC+ahqTbR42/
uJOYH85ztb15Gtpj/5DrD5A4Q67JZLdPg8iNnFyVXSRu3m85NdgzDUuvrvtY
s5nEd+PvfWaHpsGQ8LA5vZLEAEuLJ3KCM3COp++Wfj8Xfyd5Va0SnYFngf/s
5jO5OMv/bskaiRlI7+ZNCqzm4sXU6bCtsjNgXKNpUkjzuqVEfIKl5gwM1kQV
cz25+ORsZd+JDTNgJ/lu9rELF4uyJzUdtsyAo8DAf10nuLjdxezLZf0ZYHQ/
FP+5g4vyf8Z/BlrOgANP/E6diSE8oqAk8OLYDIRf/aUcyxrCoGsH9kXazoCg
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
          "]]}, Annotation[#, "Charting`Private`Tag$46204#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
J3twUfZjr7nHeMi8FGBSuLcHpXM27thqwsOvkWHiphK0/YZ1ByO8eHh5zQfH
0IJuXLO760tnDQ8DbW3j3bO68UdCWld0Cw9LcHvt9dRuFNUzPn+gh4fbTL9s
2R3WjY3Ka38tH+GhYAx21t7uxkHlr0WCEiSqkh4i3693Y/yzXUZh0iTePHBY
NeZyN9aFM5qF15HY2F0WYKvTjXLZZrzL20hMWld7WFS2G0cGmOs4uiR22gXd
HpHsxov5moNSBiSKF56JahXtxjsWn5MkzpLocqVt4t0kAxfIvVpib05i+qdI
ef8hBsoZBh1puU5in6CpwT0mA703jfrN/4/Ek2+ZyUdqGFh4Qyqr0oHER6MJ
TYolDNTMnLh8yZnErMNWQkuzGZgi8jr8ixuJ3KAt26fTGTjz83Rvy0MS17G4
l3sSGRj7/mVq8RMSz6qk+ZZHMpCbXet6/ymJfo/tvqa9ZOCWii/No89JHFs/
sdjNjYHm98TvagaTWKvm2fDsLgOHZmY9dV6TmHZ8YViEFX2fbfjFReEkPjN7
bfzemIEHpg2DnkeSeMNeTu77Kdq/hNqf5W9I1PZJ7S/TZmDfz8WfMIbE9ZFq
KU0aDLxz6vwf2zgSBdKLbvXtYGCy9VnT1rckMopOqowpMPDKEpmMmXgSc5pb
/wiuZuB6aeXC9gQSw4irueLiDPzDcbe7m0jrWz7SU3YuA4vqPJOKaZy8cfK5
6WQXhk2vuVRD46v6i5Y/6OnCYr587yAar3WUjwmv6sL9m/RUxWnc+kZ987cv
XRiuKv9Ah7YfXKr/qTG6C32Z6x3V6fv1h6/tG/XtwoODcSdYtL8LpFyLl9h3
oVqu2S7dWBKL9788oWzShZ0cv2tW0SS6X0tq0tPpQhnBz4qHokhUp0euGzu7
MGhPQXMTna+xzw2DT1Z34ftIdolCKJ3PDo5d/Nwu/Lww4fJOWq/fmCPwt4Ds
xJwP0QunA+l8KS1/zGjrRAu5FAO3F3R+Tm9dNFPciZ9sP6bm0e9n9PbCWrWw
TlRXUf/jQr/34qpbSWcedaJswpl1fx6QWDHiteOuTSeOXLBu2+VEouahT4c/
HuxEzxPtXVxbEqdvlP+sUuzETZRe5s0bJH4J7DrDluxEP0by5lQLErf0iFit
53Tg0yMaDi7nSJT0sHgW/rIDhZ6trDPVIPH3OyfJb64dmBZ7Bhftpuupxv9N
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

          "]]}, Annotation[#, "Charting`Private`Tag$46204#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7138320705184445`*^9, 3.7138321856129537`*^9, 3.7138322646689777`*^9, 
   3.7138323313408546`*^9, 3.713832397269023*^9, {3.7138324338413944`*^9, 
   3.7138324590095167`*^9}, 3.713832510391224*^9, 3.713832540997889*^9, {
   3.7138326677524*^9, 3.7138326752992487`*^9}, 3.713832780248937*^9, {
   3.71383286240195*^9, 3.713832908639351*^9}, 3.713833060610118*^9, 
   3.713833187527933*^9, {3.713833222106868*^9, 3.71383330579306*^9}, {
   3.713833471207471*^9, 3.713833492171658*^9}, 3.713833642895485*^9, 
   3.7138337067909484`*^9, 3.7138337534626045`*^9, {3.713882322468755*^9, 
   3.713882351587343*^9}, 3.7138823863486786`*^9, 3.7138824518226624`*^9, {
   3.7138824880181932`*^9, 3.7138825308992867`*^9}, 
   3.7138827321104555`*^9},ExpressionUUID->"ec36ea16-85e1-4be2-a1c1-\
afc0bd4b29a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 2", "Subsection",
 CellChangeTimes->{{3.7138764680733957`*^9, 
  3.713876480590534*^9}},ExpressionUUID->"63b4e40b-a649-45a0-81ed-\
f15aa6f00e99"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "2"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", 
       RowBox[{"(", "1", ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"Pi", "/", "2"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"3", 
         RowBox[{"Pi", "/", "2"}]}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", "1", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}], ",", 
          RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "+", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"(", 
           RowBox[{"Pi", "/", "2"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{"3", 
            RowBox[{"Pi", "/", "2"}]}], ")"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "1", ")"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"Pi", "/", "2"}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"3", 
              RowBox[{"Pi", "/", "2"}]}], ")"}]}], "}"}]}], "]"}]}], ")"}]}], 
     ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "1", ")"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}], ",", 
            RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"Pi", "/", "2"}], ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"3", 
              RowBox[{"Pi", "/", "2"}]}], ")"}]}], "}"}]}], "]"}]}], ")"}]}], 
     ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "2"}], ",", 
           RowBox[{"3", 
            RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", ",", "Fs", ",", "Fs5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "3"}], 
      RowBox[{"Pi", "/", "2"}]}], ",", 
     RowBox[{"5", 
      RowBox[{"Pi", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}], ",", 
   RowBox[{"ExclusionsStyle", "\[Rule]", "Blue"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7138765379118094`*^9, 3.7138765391221795`*^9}, {
   3.7138767645911655`*^9, 3.7138767709265966`*^9}, {3.713876802652894*^9, 
   3.7138768551231413`*^9}, 3.7138768893972178`*^9, {3.7138770947698812`*^9, 
   3.7138771139466677`*^9}, 3.713877381775199*^9, {3.713877535690897*^9, 
   3.713877638634096*^9}, {3.7138814413423767`*^9, 3.713881496269308*^9}, {
   3.7138815443966255`*^9, 3.713881591467291*^9}, {3.713881656497737*^9, 
   3.7138816700173874`*^9}, {3.7138820194295197`*^9, 3.713882199052779*^9}, {
   3.7138825538759804`*^9, 3.7138825938513126`*^9}, 3.713882692404505*^9, {
   3.7138835901011305`*^9, 3.7138835914928627`*^9}, {3.7138843508966265`*^9, 
   3.713884361573962*^9}, {3.713884415511556*^9, 3.7138844466668315`*^9}, {
   3.7138845236898236`*^9, 3.713884567920413*^9}, {3.7138846423601522`*^9, 
   3.713884669790448*^9}, {3.7138909252124405`*^9, 3.713890928863062*^9}, 
   3.7138910268852196`*^9},ExpressionUUID->"70a483b5-fe7e-4885-8e3d-\
a92374574790"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "2"]}], "+", "t"}], "]"}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{
      FractionBox["\[Pi]", "2"], "+", "t"}], "]"}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}], "3"]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
     RowBox[{"n", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "t"}], "]"}]}], ")"}]}], 
     RowBox[{"3", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", "0.09936725651255307`"}],
  SequenceForm[
  "f(t)= ", HeavisideTheta[Rational[-3, 2] Pi + $CellContext`t] - 2 
   HeavisideTheta[Rational[-1, 2] Pi + $CellContext`t] + 
   HeavisideTheta[Rational[1, 2] Pi + $CellContext`t], 
   "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", 0, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", 4 $CellContext`n^(-1) Pi^(-1) 
   Sin[Rational[1, 2] $CellContext`n Pi]^3, 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", (-2) $CellContext`n^(-1) Pi^(-1) 
   Sin[Rational[1, 2] $CellContext`n Pi] Sin[$CellContext`n Pi], 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", Rational[-4, 3] 
   Pi^(-1) ((-3) Cos[$CellContext`t] + Cos[3 $CellContext`t]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.09936725651255307],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.713881464667544*^9, 3.7138815146017475`*^9, 3.7138815942763042`*^9, 
   3.713881671981464*^9, {3.71388208161379*^9, 3.7138821500327826`*^9}, {
   3.7138821914182158`*^9, 3.713882201224884*^9}, {3.71388258736728*^9, 
   3.7138825956983285`*^9}, 3.7138827442787075`*^9, 3.7138836395779066`*^9, 
   3.7138843565943704`*^9, {3.7138844258181148`*^9, 3.713884449377714*^9}, 
   3.713884529270988*^9, 3.713884569912053*^9, {3.713884646267709*^9, 
   3.7138846706707087`*^9}, 
   3.7138910312107277`*^9},ExpressionUUID->"04cbfe67-652a-4526-9795-\
19526a079c9a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBmIQzWL3N7fmptABBij4ujJbuusqgv9M9NaJ6RcR/BNv
tylvPongd88tuPlyJ4Iv9PexS/gsBF9xzylpo2gE385qxsnndwThfO2TL21F
TgvA+ZxLhdTOTOOH8/PTjbeXL+SF8238D1YubeSG8x9qv/4r28YJ57/Vbdos
kcAO56+5/8tf2oUVzndp41+X4cMM5zsHTbS10GKE803U4mSXRvzbD+PvUJTT
Z/NE8G1k7zmkWyL4riJxKZpSCH4YU9zqtbf/wvmV92Itt8Uh+PumxYYeT/kD
5ztNkk3XCEXwj/Xereh0RfDPt8TO8VZD8B8UxT4+//w3nM/sH1t4IwvB92CP
7X1Z8AvO/5G9YsO3eAR/+YXPl5n9EXy2WV1ScroI/hGdHcuDXv6E80smMp+O
v4HgK3/ze5dzHMFv2v/UpH0pgm+kYhgxZQqC/7CjpnphM4LvECR8aHcigv9h
W9zTEwEI/nzpVRzX7BH8gBk/ZFKNEHwAs2K5sw==
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/eBgf/dEwZ/7GcDgg33suutTuf78gPP3lOfdUbmF
4FdxzcmMnIbgW849+a03CME3elGvneD8Hc7XMjZLMDL5Bud/2WvXrWj1Bc7f
6+G+TcDhE5xvE5R679nb13D+iYuHXp9ufgzn53gq/N8eeh3OZ8uacGKZ/U44
3+f2B2lZ9cP2MP7kU6udvp66Bed/vaKRwHfzKZzv8LFbonz3Wzj/m/Xc1tfK
n+H8ky/WHNih9BXOnzN1z+9Wxe9wvs6Uy0tfSP+A86HhCecDALy4gSk=
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQHTDjh0yq0U97BjD4sL/80bnztq4IfkJQwa/HIQi+
kdFmf4MSBJ9F6NuSmskI/oqL1f6ilxB8n4mMv9YK/ILzpwjw+t/vRfDv9Ess
EeD+DedPTb95LFjrL5zvZz/r5TTP/3B+O9Onq4fnMzrA+AwHVrJaHWWG84+f
rfdb8YAVzt/6bOfV09fZ4XybW23auT854fzXN7bvP/yNG85/rs6eK/SKF87f
t6Kk5D2zAJwvc3h64AYGQTj/E9s54w2dCP5xLxaxDUJCcL7Yu9frlgUh+GkT
L7vPnYTg8yW7T5mxCcHfZrL7weRLCD4LOxtv0lUEHwAO2ZMO
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQvcAm4eO0u0IODFDQJfu1beIjBH//9OYPE54h+F8E
haImvELw49j0dfs/IfiTG/ZO6/uG4J/45c3Q9wvBN3qfcbmHSRjOZ72xqLJL
CMG/1Zd8uVQMwd/gqqKbKIXgx2xe+sBcCcHf1LfC/akhgh/nuk7UIRDB37Fp
58av/Qh+Vu+Flwm8InC+9AZ3xzJZUTg/4cYH8zRpMTj/U+5j0al64nD+Ku1U
hgM2EnD+t3cSXUctJOH8Pnmx35xeUnD+rlBXbk1PaTifdwuzhouzDJy/pp5b
Z16QLJx/P8D1/CV/OTj/3Y6MHNsQBP+PQg/niggEX+rjJefaRAQ/bGLCDvVi
BP/MxeqFNdMQ/B1Bm4rV7iL4x3ddFZj4EMG/pvRz7e+nCP7nT/YvLrxD8PUm
n42pZpCH85dcfuF6QRnB32zN89hKA8E/tFi/YakOgn+/uGxXlSmCLyXCoq/q
juBr1qif6fdG8C2eeGX+8kfwQ7dMXHw+AsFPkdnqYBWL4Be13Li7JBHBb3zz
u4o/DcGfECIvUZWF4AMAvyCf/w==
          "]]}, Annotation[#, "Charting`Private`Tag$99866#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
+/rSaHu9Fj9m+QJV371KoI8NDYXbafyY8I3TQzdzCOQjDwdO8vJjl5TXBYY9
JRDPqXLppD982AY14ZbNpQQylXwS2TrBh83skb61ExHo4aH4vXua+bDj7s+Y
z78TaONzSkJILR8myW7+z6uXQN94w2vS3vFhVt9eW7B/EYia76/3o5AP0/p1
eTSe5OPsP0NH/2bzYSuuCL5KJwhk7ngobdV9Pixy4OWJ8DkCneE4Utyv82Hv
f1Tsr+LhIlGbDxsio/gwmWONFxUEuCgv1eJUVjgfxvv+xH5HGhf9MDPoGvLn
w5Rj7q9SkyD5NClPTMCLDzPek/C7ieRj+qCStcYhPuxRZ48vJPnYJpZe7OvI
h534LCiToUS+P3EHs9+aD/u0KvxGtQoX5dy5rrPPjA8bAPM9uWpc1H6/yfez
MR/mGM9zyIXkN/7HQvm2OnxYvU+7fx3Jd6aFtiOVKnzY+iPnT82T/Of1IkrV
VI4PCxCtqWOTfHinvOboUwYfpsa389tTkh/fo+VHa6h82Oy9HIo2yZu/6y36
7i5TMLVSxXfHSR5V+xy+SmKOgpW78XodJ3nVtePtgWtTFGzqRNRJTZJno3vm
0pdHKNhFyRarfFK/Glr3PaSXgl2yXto9SurhyXPSU+0UrF3CUnqY1FLEi93e
LRTsEe+bP49IbfNn+mZPHQVLtcgOlSN1EI9B6+4KCib+zlFoJ2kvR+ik+MdS
CrbTWlHVmvSnXbzQcUshBdMNvWdHkDzMLzMe/zaLgrk+CeQeIuMxVdRoMrpL
+lMamn+FjNdLzUuoIJmCfXpSPupJ5uOObrbt6msULOvaufWL5H7x3nggKvUy
BVMsV1PapUHGv0mpViyUgt2/Fq95RJWM3+oQT0wABbt9q7BPVZmM3/6e5T9v
CvaB5/vXLJJ/o527Lp47TMGS617e/E7W89VemYpJVwom/MzsxXuy3sOHXf8c
daRgg8EfPviS+5LNydbgnWYUbOV/awzbBcl4z4m/ajCmYM6p997d4yXjveBI
WOpQsMe3jxfI/CMQf1xjgL4cBTM+qmKizyb7P1nwWQ6Dgl2wdJZvmCCQV5oN
rkClYIyqQ/NSQwR6n4sdF57jxeauGTl8bCfQ76Kl3P+meDFN6hF5k08EUntl
Pjw/wouNHbV6tOMDgaJryz3G2nmxlBnLjLuvCGTTX7L/fSkv9nTXWzzmBoGC
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
dO4ALHlzZXhCko2/fb6OFqgMwMCzfVON5rDxqp5u/kHdAfDO7FtUw2JjROtp
9bBdAxB47IdHpyobr6s2OQenD0AMj/Vb0oyNGYmyn8ONB+FAq7X/jG1szG3e
pzhhMwh4OUk01ZKNcZFlMlf/HQTBXJL/excbT7R+qN+QMAhWM6i2gYNs/CDm
UQE9g0AOKBfXR7HRj3/NuTh6CNKLlp2+XMlGeSLMycl3GIL8D09erGGjzNWt
fUdChsFa535gfD0ba90Lek8w/D3znpZvdAsbpaJ/VVxMGQb3W9ouQf1sDLi8
e+xB9TBoRq423S/JwRSnVbFjKgIo2mkyS20TB2XWtYToVglA27zAX24rB6eb
TRlraRTAnY1Le0YtOHhu2ZU49zYB3Fwj97zKloM7UqTitg4LIEy57bCHGwdH
KZdtkgxv/2FbfLLyYPyVRSpPcIXgL//KdK0nB5VSV8o1LxaC+8xspTkBHPQS
E7xFPSGYD/g23D/DQTWfOYeqdwnhTd+XdcnRHGR1H+z4sl8Ihh27c0NjOWg+
PzOi96AQdBoxbHsSB8Nvfp8MO8bwRKH0SlEmB/8cnGwwShJCwqOQ1E85HNw0
LJrhwPC39B3hnLJ7HDR4GZmxK0MIkzeavyTmc7D0fnFV1yMh9ISlX15ZzsFm
Xqm/QbUQ9gYrzOBVcTD5i+ML7QaGD/zPes+s5eCHrieN05qFUOnuubm5iYO3
+8XU1buZ+Jy7n7xs4eCGBwPbT38VwrO91guz2zh42eWs9MMBIdyzMJg41stB
qZzvMjE/haBqdv+gYz8Hr2itNTIYF0KK0YIPZgMcLLqm2/FCTAQJKyXuc0Y4
eHXF6lXA8JW0ViBn+ijzvGRX918+j1AbPMMf5+C77pDPUgyPBVDvHZ5Pp7BO
7GkelxCBYL5pTYYEhSt+5EU5cETgLlO0OkaawvFG13QfRRH0SCzL9JOlUK3M
IdxaWQR7p6bMtZen8Pxxx3sSC0Xw4ffcEFOCQm6DfWrUYhFYjITTmhSF/g7h
vc0MX1YO/rIhlChcMGkwMcLwp+HXf8vEFlL4ymyFZwfDp88627X6VSmsUbAp
T2L4VffT9uv1SyksaP0SyWH49t77MskiTQq95TwN/97/+ad2lV+qNuMvrDY4
guHjWxU5XWdXUfggdfVbj7/3f0q45j5rKPQtNMrnMnydWBT3dA9QuGfx53fJ
jD07b9o/xkYUdoU6ZrcxtkHjvLiTphRuERif/Pu9oLtQ5deLzRRaRSn75DN2
spyOw7g5hTG48+dfXi/XMn6z2orCiB/rI6OY+b6bW2n521K4cKdVaiwTj8oR
5+Q8Owpn3JQss2TitYzxFRM6UPjm4MihBk0RhN4Nc9N0ofCSUcWCOcx671Un
1nkcpBCMLQ6IM3q00el6OYcoXB8VWfpEjcnnrMcpX7wovH4t8flCVRHoL3kt
sciPwuDyqu7NjP5um5o8HY8z+m8qKFVn8pPk1tt8M5hCyTOLv5VzmfgyxbPZ
Zyi0zB2xW8T6e99qvpxtNJN/tlHjV6YetvcuOnYxlsIAie9fnJh6uaeyYZNs
MoUhRz7uCWH6v1ZD64dbr1Go65PyS/GPEGY5upLRKRTmTv1+z/eXENxSIvrF
symcXXJ3AvlCuFR8abvRXQorpzb35fcy/XR7ZmHoQwqtlytFdzJ8voBbEfW7
kMIn8xNKdtQxvHx55hJBFaPvGq/LafeFIFWoEK/xjsIph99N5DP97+pm1bF/
G5l82KX/d+I645+1sarvE4Xv5IxHFc8KwSIh0r2VT6HDuc6efHshBD9KbiAF
FCbkRjTaWAnhbv1tfZsRCuW671zK3sj4l62Uaphg4lFUG9+nxfQb5yRzK+Zw
sSfrYvjscYbPc8l54vO4uNvMyXT5oACU36oFGipwcX57f9/0DgEES5ptfs7j
Ikos9X9aKgC9iLP0Iy0uHg0qDHIOY86/kFnqNyy5eJN6o5H+axgErsl/4q25
eJ4/+4XEl2FYuW1R/ZndXPQTrU9RbRqGYgr8vBy52Os562Hig2FoKPR+aezN
jCt6lGo4D8OoqMWKvsDMn9TS/ufEEKz75KracZGLuTv2J2lsH4JTpaLR95e5
qEpP9/tv4RBIX5h988UtLhY5BlhfqhoEJY31/RcecjH4lcO+JplB2OB2O0iv
novfTnVff3uSD9HmuhbLmrh4gyfT+GYrH+pWli5Y0MJFo0vUa1OSD7vEWytm
dXJx6cyPsTX3aPBIlZn7eZiL/uvOuEq//wbxrX6Z4bKKeGrsZ66YRD98tjB5
12CuiGs47edqOb0wWODmsdZKEU/ksTxa63tgXOmc5G1bRdzibXXa80wPsAUN
RkH7FfGomXz4ckE3WF9wKFD1UcRjU/aJGxV3QXV94K0TlxSxNT6+b55pBxRY
PvJZ3KaIAjJhUZDKB6goapK90KmIJle06Rf+TfBhwejd372KqJQlQYS8fQ8i
IXytG1RE2zHy2lmvRtBIqLELFOPhcekyCSiog/TGryZ1KjykNLWcHA+Uw//W
SHfr/8NDn/E5a09New2laZqhGeo8pD0zzRbcfAWfffyKjuvy8HlWfvH0ppfA
lp+uuciUh1W9V46GBuSD2gnV6tjNPIyLMD10Ped/oNdjdnDMnIc31kUkGrY+
gJ15F9Le2fJwLKIpofFEJjhTj1F/Lw/zD0lxqPYU8A5rbkvfz0PdVPns30GX
4CT/93EZVx7620xIegRHQJwVjzjuzsP/yW7++3/Gdf8HSpHTlA==
          "]]}, Annotation[#, "Charting`Private`Tag$99866#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0p44FGevRA/2VoJ1W4r//78ek/8AeBvY0A==
          "]]}, Annotation[#, "Charting`Private`Tag$99866#3"]& ], {
        RGBColor[0, 0, 1], 
        LineBox[{{-1.5748034602816183`, 0.}, {-1.5667891933081748`, 1.}}], 
        LineBox[{{1.5667891933081748`, 1.}, {1.5748034602816183`, -1.}}], 
        LineBox[{{4.708381846897968, -1.}, {4.716396113871411, 
         0.}}]}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713876829391643*^9, 3.713876855718678*^9}, 
   3.713877575670173*^9, 3.7138814229684906`*^9, 3.7138814640988865`*^9, 
   3.7138815123692594`*^9, 3.713881592798901*^9, 3.713881670611597*^9, {
   3.7138820802439556`*^9, 3.713882148635976*^9}, {3.7138821899618807`*^9, 
   3.7138821997883034`*^9}, {3.713882585943085*^9, 3.7138825942810736`*^9}, 
   3.713882744550206*^9, 3.713883639849906*^9, 3.7138843569423714`*^9, {
   3.713884426070115*^9, 3.713884449627714*^9}, 3.7138845295219865`*^9, 
   3.713884570180055*^9, {3.7138846464067097`*^9, 3.7138846709487085`*^9}, 
   3.713891031536728*^9},ExpressionUUID->"ea5ea753-a395-4181-9067-\
d3a084e4ac2c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 3", "Subsection",
 CellChangeTimes->{{3.713883312758666*^9, 
  3.713883318949897*^9}},ExpressionUUID->"7f812341-2836-4c3c-8b10-\
44a7eabd6d9d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", "0", ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"(", "A", ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"T", "/", "2"}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"1", "*", 
    RowBox[{"10", "^", 
     RowBox[{"-", "6"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", "A", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", "0", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"(", 
           RowBox[{"T", "/", "2"}], ")"}], ",", 
          RowBox[{"(", "T", ")"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "A", ")"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "0", ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", 
            RowBox[{"(", "T", ")"}]}], "}"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "A", ")"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "0", ")"}], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", 
            RowBox[{"(", "T", ")"}]}], "}"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs5", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "T"}], "/", "2"}], ",", 
     RowBox[{"4", 
      RowBox[{"T", "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7138836498849707`*^9, 3.7138839563472004`*^9}, {
  3.71388403773199*^9, 3.713884072842563*^9}, {3.7138841622820663`*^9, 
  3.713884162733418*^9}, {3.713890915653344*^9, 
  3.71389091931388*^9}},ExpressionUUID->"eac5bbf3-dbff-4117-ad78-\
632b55bfc74e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2000000"]}], "+", "t"}], "]"}]}], "+", 
    RowBox[{"A", " ", 
     RowBox[{"HeavisideTheta", "[", "t", "]"}]}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "A", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"2", " ", "A", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}], "2"]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", "\[Pi]"}], "+", 
       RowBox[{"12", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2000000", " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"6000000", " ", "\[Pi]", " ", "t"}], "]"}]}]}], ")"}]}], 
    RowBox[{"6", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.024841814128138278`", " ", 
    SuperscriptBox["A", "2"]}]}],
  SequenceForm[
  "f(t)= ", -$CellContext`A 
    HeavisideTheta[Rational[-1, 2000000] + $CellContext`t] + $CellContext`A 
    HeavisideTheta[$CellContext`t], 
   "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", $CellContext`A, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", $CellContext`A \
$CellContext`n^(-1) Pi^(-1) Sin[$CellContext`n Pi], 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", 
   2 $CellContext`A $CellContext`n^(-1) Pi^(-1) 
   Sin[Rational[1, 2] $CellContext`n Pi]^2, 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", Rational[1, 6] $CellContext`A 
   Pi^(-1) (3 Pi + 12 Sin[2000000 Pi $CellContext`t] + 
    4 Sin[6000000 Pi $CellContext`t]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.024841814128138278` $CellContext`A^2],
  Editable->False]], "Print",
 CellChangeTimes->{3.7138839575640574`*^9, 3.713884075310085*^9, 
  3.713884167262763*^9, 
  3.713891038566535*^9},ExpressionUUID->"c036cd2c-74ab-4da0-9b7d-\
e26139e5e6e4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0WlQE2YQBuAQaGkNghW5CnJVAeUSkSgdWjlahYASMGpqpJRLjAihpWDk
kgFiLEdFDjXIDdIgVwgBTZCgKKk0wIhSQGmRsyKK0iKHKE7bGd3NN7PzzfPn
3Z1dk0CWbwiRQCCk/1f//xKDlZRFWYmU8O6VTRWEB9xA/yRyOigXo+le8ZuL
a9CLca/v7spGbxt6tf68H/qw/QyLOVUM/sp6ZGDctQjsUzpg8EKQD15W7WKk
My6Ao7P0NCe1c8HWPPbO/elZYOVNVfIadhrYzDiV+IdXCvhBkylNjcMGDz5/
K0qmKth8SOuVvoJ5OQOTwhPoBBVG20gM+uu/An5wikb/XsUanPserX767t42
Be8OtOtIU7D407kGEwUXpseke0eCBfKHy/EHwsH1TwO0PTqOgJszr1fS96Gl
tjrbj46GgHuiug5yV4LBz16TeR0OQWCqru6OVC9/sP/hbnr50W/BESXJJ9tT
/cAZFjMSQisDfGdH+xcJ1nSwyzfH3WLUfTC/0CQ4bzMV52uv/ZiZuRfvey85
Y3KFAo6as8oeHnYDZ8dduG+g44r7UCZqMbydFe5VZ1t/yhG8bkeK0HLWAfu7
0x34323FvF6VGNcUM7D2hN9izB1DsOpGIZGZtgZ829Y+cjBwrPW9rYSU7pBx
1S/f0Tk/7G3oY/IGME1rf13s53bgoD5C+Rn2TrDYo9/Tc2gXmMStfVRADAL3
tW6NsTePBG+yPF2quiUBLJN7vHG+wgFLC/rtD7tlgIvJJc4bm86BV6+8fj68
PQ88fPdQuWriRXDUBv6YHqkA/IJG5RxqLASHcZbMLzGKwd2GKs8lxiXgiWWS
Oz8HHbrgNfdBGXr678yiIAG6hmXzY/ZVdPhMj8dNKdomjGU024GendKYN+wG
E4RHBL/t6UNHTVBL4ofQC4/OeT58gn7Tr1mW92EpWEoTnbi9Gn3qHm3P3Do0
sSdvifoZ+qMOHW81Z7Rmo/6b5JPorET5gawktDolrqGQi141+vDItTyFfI38
3pkG9Owx3V/o0+geUy1fG0YZ+Ey2Ov+BUzm4bok48Hi0AtxcFCE/dqUSHCkf
cr1M44NdQg3eJi1UgV+69iX2tlSD6Zczkx8E1oKLdks9D1jXgxOtAqwkJwRg
zlLQywqPBnBCsKkRxVqI8+cEkORKjeDq2DSewT00W4mVZiESYT/PPqc13CZw
k8O8jzCsGbxx/LzFFperYBN309LEtdfAq/cw47nzaF8tO73jnWLcX4JIl1Qv
AVMKTSSxWS3g4CSN9bLA62CWsnhMvqsVfN9jnFmrLwXf2r2Y7f8MXT4pM+zq
aQNHlJPIq3xugGU5vKejvuj1qealYhq6K9hNjUlHW5rFjf3qj57iT//MiUAH
1XU+JmSgJUUHCwcz0WvPTvoKzqLbWUpS/xy0sZ1jrjQfPdzId46vQpMryAv7
qtGZuberLWvRTtEj2kMC9CWy7ozjNfQ/ZpVln0jQFJ1t9Cct6OVF71sX29C+
U3+yI2+iqwbDbNxvoQmdr8aNOtB0MZe3KEP/C6+mPAk=
          "]]}, Annotation[#, "Charting`Private`Tag$100540#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
1g==
          "]]}, Annotation[#, "Charting`Private`Tag$100540#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
US+C1f///5f/B9xnQ9E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$100540#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713883957866053*^9, 3.7138840756370807`*^9, 
  3.713884167598261*^9, 
  3.713891038898037*^9},ExpressionUUID->"66476d82-52ff-4e1e-ba81-\
19bd5d253178"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 4", "Subsection",
 CellChangeTimes->{{3.7138843233699055`*^9, 
  3.7138843278722477`*^9}},ExpressionUUID->"8c63b575-af13-4575-8464-\
95e8ee88eaa5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", "*", 
         RowBox[{"t", "/", "Pi"}]}], ")"}], "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", "0", ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"2", "Pi"}]}], ")"}], "/", "Pi"}]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"A", "*", 
         RowBox[{"t", "/", "Pi"}]}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", "Pi", ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "A"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "-", 
            RowBox[{"2", "Pi"}]}], ")"}], "/", "Pi"}]}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", "*", 
          RowBox[{"t", "/", "Pi"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}], "+", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "A"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "-", 
             RowBox[{"2", "Pi"}]}], ")"}], "/", "Pi"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "Pi", ",", 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "*", 
             RowBox[{"t", "/", "Pi"}]}], ")"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "A"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", 
                RowBox[{"2", "Pi"}]}], ")"}], "/", "Pi"}]}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", "Pi", ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"2", "Pi"}], ")"}]}], "}"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "*", 
             RowBox[{"t", "/", "Pi"}]}], ")"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "Pi"}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "A"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"t", "-", 
                RowBox[{"2", "Pi"}]}], ")"}], "/", "Pi"}]}], ")"}], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", "Pi", ")"}], ",", 
            RowBox[{"(", 
             RowBox[{"2", "Pi"}], ")"}]}], "}"}]}], "]"}]}], ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs5", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7138854517517247`*^9, 3.713885685064048*^9}, {
  3.71388709540003*^9, 3.7138871411857567`*^9}, {3.713887234307207*^9, 
  3.7138872635427213`*^9}, {3.7138873060938454`*^9, 3.7138873148397884`*^9}, {
  3.7138873458870096`*^9, 3.7138873590444365`*^9}, {3.7138874319016237`*^9, 
  3.7138874336640515`*^9}, {3.7138877619798803`*^9, 3.7138877654113245`*^9}, {
  3.7138902392427855`*^9, 3.7138902447811365`*^9}, {3.7138909052635174`*^9, 
  3.7138909092951527`*^9}},ExpressionUUID->"53af8747-81c8-4073-b46c-\
3021e418a8f6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox[
     RowBox[{"A", " ", "t", " ", 
      RowBox[{"HeavisideTheta", "[", "t", "]"}]}], "\[Pi]"], "+", 
    FractionBox[
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], ")"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}]}], "\[Pi]"], 
    "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"A", " ", "t"}], "\[Pi]"]}], "-", 
       FractionBox[
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], ")"}]}], 
        "\[Pi]"]}], ")"}], " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}]}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "A", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", "A", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "2"], "]"}], "2"]}], 
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"72", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{"8", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}]}], 
    RowBox[{"18", " ", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.00019155112255648862`", " ", 
    SuperscriptBox["A", "2"]}]}],
  SequenceForm[
  "f(t)= ", $CellContext`A Pi^(-1) $CellContext`t 
    HeavisideTheta[$CellContext`t] + $CellContext`A 
    Pi^(-1) ((-2) Pi + $CellContext`t) 
    HeavisideTheta[(-2) Pi + $CellContext`t] + (-$CellContext`A 
      Pi^(-1) $CellContext`t - $CellContext`A 
     Pi^(-1) ((-2) Pi + $CellContext`t)) HeavisideTheta[-Pi + $CellContext`t],
    "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", $CellContext`A, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", 
   4 $CellContext`A $CellContext`n^(-2) Pi^(-2) Cos[$CellContext`n Pi] 
   Sin[Rational[1, 2] $CellContext`n Pi]^2, 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", $CellContext`A \
$CellContext`n^(-2) 
   Pi^(-2) (2 Sin[$CellContext`n Pi] - Sin[2 $CellContext`n Pi]), 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", 
   Rational[1, 18] $CellContext`A 
   Pi^(-2) (9 Pi^2 - 72 Cos[$CellContext`t] - 8 Cos[3 $CellContext`t]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.00019155112255648862` $CellContext`A^2],
  Editable->False]], "Print",
 CellChangeTimes->{3.713885692487874*^9, 3.7138871864367733`*^9, 
  3.71388723365554*^9, 3.713887278480635*^9, 3.71388732098589*^9, 
  3.713887363726967*^9, 3.713887438419997*^9, 3.713887776403236*^9, 
  3.7138902549175167`*^9, 
  3.713891045135625*^9},ExpressionUUID->"40522190-4c17-4c12-85b7-\
1f71d9ca4ef5"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$102138#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
67Xo2NloVqFRlQuSby0oquvpON7wa9vhLVzofqN+z0GOjq1XBMX7a3HhUe5S
5l0GHdutyYoN384FuZctG34K0rHpVsfFw8CFwRe5b2R56Lhmg+t+ud1cSMuI
1DWfo+F9on+iGvS5oJRqYZo7SsOnqhxnPhlyYeyJeufAAA2bTO+YARMuvExe
elS8h4YlIx+/v23GBfVHLefO19Fw4fXajF4rLoSaXOKdxzSsF1BjSrXlwgB3
5YPrhTQ8v/elgdRBLmi/Ll9HyaXhy+Kjd0QOceHecdd3dzJouLP9ttjwYS6M
rBAxXPaYho9EG1Q/duDCzto3vfGxNLy13jNjhyMXfqpyOek3afhFr+t7eWcu
7OtPvbfRj4bLJnmmTh3jQvJ9wzX53jS8906M0oPjXJjZ8+uNjjsNUzclH3t6
ggumMw/0y4/T8MaIrY/uu5D5P9fp3G9Pw+61zPoTJ7nAPjzg+sGKhgNjMyak
XblgIxIyb2NEw28uDvHkk/ySULn9aRcN32705lF34wL/+dZVx7bT8Gva0+8R
JDsoXM4ZVafh3yU2RS0k53euQp5KNHwgU9ZrmmShsIrWaTka9upSF+GQfEzX
7bgvg4w/yiniP5KLJkSmecVI/S4qTueTLPEkLySMQsPcI8m7XUg+bXWIuZRL
xWJut67MkfFU8P97ETtNxea9e+I9SJZ+l6YrM0HF98V7MmrIfM6fMmpKHaLi
qhO/MvhIrls56aj8mYpt+NqS5Mn8V3+Imcxtp+KMJo8IBVKfKwG6N7Y1UHH1
+gPXaaR+LRpfl5VVULFCddGlVlJvpeGQZ/pF5HlvLx9fJ7K/H6pua3hNxe+7
Jh/Qj5L9aNhWa/mCikfXWzb4HCH7g335cPcTKh4fMV7fYs+FWzkyPxzjqHjk
nu4bQbLeX5wq/YbvUbHqrpWX5O24oLXslJj7LSo+5xTit/oA2Q+X8zWuXqLi
qZjbwdWWZD8oH676d5aMx+paooc5F2I//7MNcaHi6NFEpQWyP/fuMr4abUPq
0TrdUbyfrC99kMjWoGJXnccK47pkfUtuWWoqU/FJfv+AXG2yvp4bvxWt+V9+
Ls2HtnKBr+MKpXYpFW9W1blvp0bWJ0nMdPCnIP59+kUbVY6sj/nbL24jglhW
xmjylzRZH177c7/6BLHFn/XpxeQ8V5xMj2Y3CuLAGSPtJeS8r1Hf0SuZJYj/
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
/z2/gf7/8xv/B449aqc=
          "]]}, Annotation[#, "Charting`Private`Tag$102138#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
0YdDgSV9R8nz+NrP0iebqWi3xeCzOTuSnyWHR090UNFaSofCb0cyR0Fa0fF+
KnrXtfQ8vkme5//usjaZpCLNv5OZi/e48LYsI81wOQ11qnkL9oVwQSi30eew
DA1RhbSbSyO5cD3pz8lDcjRktm/65D2Sj/VeKvLoq9PQEomWshcJJJ/57Ws6
qE1DealOuoMkH6+6cz72gC4N7egSZLPSuTBhE2mwz4SGJNSFghkkX5idyZXd
a0ZDSYbGaTUkH5cbt07suUBDRjxHaLYkj4RpLg3d5UxDnOr69P+qSD5U2WyH
3GlIgIev8Hwt6c86fQBvGnq/+qylXT0XdgvdH9AOoqH4DtaEUAvpD8+bbK0I
GnKjXIiIIXlYcqrQTzOGhhRO5JyVJHn4zuA38x2JNLQ1oFzWkuThoc7ZLRrp
NLRt62iRbzfpZ6OEwPZ8GpLx193kS/JZYbla23+lNNRYGq537n/8lmeYoF5D
jufnxr+M5OPnyXaeW5tpaHhkw/5XJP8tvH1orNZBQxE10TwCJB9eDImV29JP
Q+eOfVitS/Jj/eOSGZURGpJCuSFmJF9q3u2p2jxJQ+6zkmaHSf6MceFEblqg
Ie0o4qwUyacittLXlPnpqLL3RlgBqW+ab9fdKERH6SXl/Fok3/YeMWEqLaej
Y2tmQgJIbbD/2pCCDB3xq7GOFpE6U+tpwQY5OvJr4Kj+j5dXqyb4yyvTkeBH
pJZI6kdyFefXq9ORsL6OqTWpJ1kD2+S06Yg6xoqdJ8czF+ZlrNOlI5mzWasv
kbpiiWznGgM62nKj9HMyWa/atFbKahM6upmYlF1H9hMxZHpP1oyOjpq//1VB
9kvpdjm+6gIdFdDf2IaTflxteq640o6OdpgeNdj/kwvtn5IXVjjTkZ2gamQN
6adufk2dtDsdeZZdvrKR5OeklME3Ut50pJE003i+lwt3Q9cdZAbR0X9bHOIt
SF5Wpr5bGA2nowdEf6saycttzvIppW/pSF71hkP3Vy5sNlJkOqbRkeEOhX3V
JC9/LYivOpBHR33HqwsYjVzw3qjsKVtCR6or/MXk68h6KCoDNY10NDf9rHKs
ggv3nVNC3rbTUZt3rPPrMi6o9m4xcO2loxNO/t7KxSSfF6inbZigo6fPN9u3
53JB3VnzrtdSBlo2+XIkgOTn7u956ielGMh6MEVHMZb023DnL5U1DORXb2wU
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$102138#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.713885692828875*^9, 3.713887186765774*^9, 
  3.7138872339510393`*^9, 3.7138872787766356`*^9, 3.713887321196391*^9, 
  3.7138873639464693`*^9, 3.7138874386089954`*^9, 3.7138877766442366`*^9, 
  3.713890255133013*^9, 
  3.713891045345622*^9},ExpressionUUID->"784c1819-d101-4db1-87fc-\
a62c6279e9dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 5", "Subsection",
 CellChangeTimes->{{3.7138876859485016`*^9, 
  3.7138876910526495`*^9}},ExpressionUUID->"0539cc66-c0c0-498e-8c9b-\
22d798cc7e43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", "*", 
         RowBox[{"t", "/", 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}]}], ")"}], "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", "0", ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", "0", ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"A", "*", 
         RowBox[{"t", "/", 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}]}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"2", "Pi"}], ")"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", "*", 
         RowBox[{"t", "/", 
          RowBox[{"(", 
           RowBox[{"2", "Pi"}], ")"}]}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "*", 
            RowBox[{"t", "/", 
             RowBox[{"(", 
              RowBox[{"2", "Pi"}], ")"}]}]}], ")"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "*", 
            RowBox[{"t", "/", 
             RowBox[{"(", 
              RowBox[{"2", "Pi"}], ")"}]}]}], ")"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "Pi"}]}], "}"}]}], "]"}], ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs5", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      RowBox[{"-", "2"}], "Pi"}], ",", 
     RowBox[{"5", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.713888249154552*^9, 3.7138883485825567`*^9}, {
  3.7138910588994856`*^9, 3.7138910630199127`*^9}, {3.71431050889849*^9, 
  3.7143105277546854`*^9}, {3.714310558014573*^9, 
  3.714310579362713*^9}},ExpressionUUID->"8c8d11b4-79f8-413a-a764-\
ed3582afed8c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    FractionBox[
     RowBox[{"A", " ", "t", " ", 
      RowBox[{"HeavisideTheta", "[", "t", "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]], "-", 
    FractionBox[
     RowBox[{"A", " ", "t", " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}]}], 
     RowBox[{"2", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "A", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "n", " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "\[Pi]"}], "]"}]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]"}], "]"}]}], 
    RowBox[{
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "n", " ", "\[Pi]", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox["\[Pi]", "2"]}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "\[Pi]"}], "+", 
        RowBox[{"6", " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], "+", 
        RowBox[{"3", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "t"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"3", " ", "t"}], "]"}]}]}], ")"}]}], 
     RowBox[{"6", " ", "\[Pi]"}]]}], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.014378638910075677`", " ", 
    SuperscriptBox["A", "2"]}]}],
  SequenceForm[
  "f(t)= ", 
   Rational[1, 2] $CellContext`A Pi^(-1) $CellContext`t 
    HeavisideTheta[$CellContext`t] + 
   Rational[-1, 2] $CellContext`A Pi^(-1) $CellContext`t 
    HeavisideTheta[(-2) Pi + $CellContext`t], 
   "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", $CellContext`A, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", $CellContext`A \
$CellContext`n^(-2) 
   Pi^(-2) (2 $CellContext`n Pi Cos[$CellContext`n Pi] - 
    Sin[$CellContext`n Pi]) Sin[$CellContext`n Pi], 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", 
   Rational[1, 2] $CellContext`A $CellContext`n^(-2) 
   Pi^(-2) ((-2) $CellContext`n Pi Cos[2 $CellContext`n Pi] + 
    Sin[2 $CellContext`n Pi]), "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", 
   Rational[-1, 6] $CellContext`A 
   Pi^(-1) ((-3) Pi + 6 Sin[$CellContext`t] + 3 Sin[2 $CellContext`t] + 
    2 Sin[3 $CellContext`t]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.014378638910075677` $CellContext`A^2],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7138883533022423`*^9, 3.7138884406950855`*^9, 3.7138911257324467`*^9, {
   3.7143105425480523`*^9, 
   3.7143105826541214`*^9}},ExpressionUUID->"888990fc-1ba1-44e9-9be3-\
fa7e93dc574e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$11997#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vTJ8Gcd8bNmw/bPxCi5Cj9yEB0Lh24j8S1SE9Qi9zBWvfbyrx4aHTx6ZjSH0
/J3j45GqxIY/O3jziRP6e21xFnsvzobTeFq/fCXqw6rejf/jZsNNGQ8/5BP1
U359uvXF6Cot7tu3HY1Eva3xNv3qhlUa3/kHY2sJf/j/lbnDeL9KY32tXvOS
6N9KwfptmgGrNNf5iZSDhH+HlF8lWzmu0hgechnXIwj/mIXPnN2ySvvx/fmb
kUjCL4ccbe7IrdJ2N15jxMcQfvHVzXjLYtH+S5F/43+X8MctAc4fXSwa88Oi
cuJ9wg9pvS5TFSxa+6HbcXMPifo2PyAZRLJoS+/EmsKeE/Uc8/Fy8GTRxllV
9FeviPrxWlRdsmLRLrmbHBHLJuqxefFSiSiLtmfD9aiyIkJ/u18/2iZXaJ35
wRtXygi9z2SvX/m1Qptb2CB/o4rQL+VoJySt0Or6Xa39fhJ6FRltdg1aoQV9
j9vY8pcJ9xpJ96+5rNCeK4c9j+om9k+Oyl2fFVZoSyo0nh+TTLh6Si13T8Yy
7U9Nyz5+6gwI8T2UPx27TNs8Y1G+ae0MJL3huXvDb5lW13t+IV19Bt4N9p/D
m5dpgrQkjkMmM9B55oWuYd0SbS52uUj41Ax4CYmnHchdovka6cl4n5+B2ezr
FL97S7SU+7alYmEzIDJ2YjrLaYk25LHuq2HiDJj6KhYoDi/SzD4H7P1ZO0O8
v+JVoGGRNvH7saZXywzYv2dLdPmwSDP/aexh0T8DZ6c6Ax4GL9J0NxT9+M0+
C8n+KcbCQou0u+6zu3XNZmHhsmzpvNYCbRvruvGZylmIkI7RopIXaO1WshZ6
zbNAKiGu4zPztFQdygdDxiyoL/0N9Smbp8nG/uJjCs7BodAk6Ns7T3P07ElX
cZyDgqsSlQ0+c7S1dUHfvRfnwC9atO7VuxnaVLuEHvnIAiRdW5th+2CGBq8b
b2ddWAActDFqMXCG1sPTHnUwegFIZ2x27ds+Q0u76rP5R9EC5FrdrZhpZtK4
BC6s0RdbhCEh0U87lqZp1BXBjuXaRaBwr3081jlNc/gvuv5t1yJsXtEOTKqa
pg1tqYo4MLcIUaP7jEZip2lNge287spLoPr9zof7CtO0xWVhoYDQJThxVyS7
Z+cUrcpXKyhAYxmiI+VjbmtO0QKq2z9uNluG9+HaXoaiU7Qhg5i2r3bLwOa7
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
kw/PHJkhrUFmbZ73L3j+B+b1cjrftNegm33DBnkXKiFRpvZ/HVt5PJTfF5YU
QtakbDNmxjBm6Fsqhc4RkUpppUiFKFlSki1FoSRUKlmilEq7nazZsyRFEWWd
sWUdQozf2+/P5/O+99xznuc579z7uXO7DdYp4sTnCuEnvBIYcDx3P0tfEXU/
naitDCuFKP46/qQdikgV1li0M7UMetZfbPR2UsS4PWdaxpUr4eqjDh96siJW
dtUH+Z6phdbhG1rxrxTRk+m03FS1Dv7T39gtlaGILwKKWzg/6qDl2y0zXoki
vhYOzVFWrQcNMSNSY4ciPuUyCs8kfIa688llgYpK2Of2xfrAy68gbXZK4meU
Eq5cn1Pv2N0C4VPuhV9jlXDnf/HnxuEHLHns5Vr9SAl1HvB5q8X+AL6/QTXZ
b5XQde6p0BnzVhh6lnj1dg0xvvX7nuKMNvgo0MRnKqCMZ3Z1RtSvbgfjt61v
QEQZ7/qbvd5j3Q7FVl0266SUkZRtIHY+qB2yU0fyKCRlJD9tpMY1tcOToyLe
PF1l1KbrZUt5dMClPBxNO0uM59X6ld7vhFlHk8QUH2UMmd9/0SKvE85L79z1
MICYb+jZ3lM/O8HVyepVeIQySsmIPBEnd4G1nOfJky+UcWUP65pqYhd8L/GT
O5qqjDfaDq+OLeiCvW6XKw7kKOOSwT/CIa1dsK08kmZUoYzFiTGdRbLdsN7j
RYdSlzIm7emrfH6lG1KVUyOX9SvjUogdLHnQDZrV2SA6qowWo/bu5tndQFUp
j5/mKaPCE7fHhX3dIHxihOkkRsK4u+Xz41t6oDz/7JUeCRIu51ediLfqgSvS
f34clSGhe9R2g9zTPcBXOBdqIU9CZ1+Ozvb7PUQ/iPQZqZPwjlyqVGtXD3w4
mpv6mklCiZMpjZ+4PRD24qSf3CoSnn/Dq4JFbCAZVIoPriOhxbGRuHtUNvRf
P9+8fyMJ30/uMwtYw4b0JtWkQn0SaoqbNPQbsGGrc9C620Yk1Jm/mWRwmA1S
Wdp8cyYkbKfc2vCfExtaF3RXOWwn4Zvli9c/8WSD+73NhzfuIeFv2+lo5XA2
6HWOqj7eT8JZI79stftsWMx6OCJ2kISneYsz3iexIebD/OWOIyQ0yf65MyiL
DfZib8y225FQo9hKsrCIDZqWNsszHEj4rLBk5moVG0p+56VcdSFhx0D+sq/N
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
Pyvp+zAskTRe6eOkhVtzYx3m54fhfzBVvzs=
          "]]}, Annotation[#, "Charting`Private`Tag$11997#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
QPT4S/0dt8Txa+aCRaclB15PcMXp3hNHBQ1l+3AXDvydenpaMEkchV/e+Lzj
Hgfmp+e/LKaLY1FT89jWJxwQZ+/XHnoljoKm59RNcjmgPZN6//cbcWzoux5z
qJQDprPs2epCcfzXHHfH8hsH7Of2nMgvFUfVMkv3Q20c8J9P+pxeLY4bcuMa
NvRz4NHCpMb9b+K4R8j51LJJDuQuGkde+yWOJ2nTc68XOFDHiZ9yZ4ojnN1Q
J7GUC/u4xo6d6CbmywleV7ycC7m5dxTvHRTHqhvt9rUruFB2aYzK5glxjEoX
lzRcxYUGPEM3qbPiSPmTpfH/+Zz9y7aOSi2RwJ/S38J11nCh0/L7R/j4JPDv
jZX7cwi+ztv/fnq1BMpd3BYdSnAi32bFbjEJFBnxic8mns9fcfdGo6wETh+P
/qwhwIUNK7tZJWQJFIvTDhtbyYWD/Bv2Z2lIYFvuYf+lfFy4XODO20QdCeT1
0Dlmw8OFiqs7pO+sl8CZwvQODocDG9foX70MEhgqmXiuZooDhwXDuh13SqDx
ytpL8iwOnBPRXjpkJoGPdfJsK35zIEj8l6LbEQn0UuiAZ185ECPlv2XCWgKb
JP5uKSvgQJasirW3vQTGBeW2C6ZzoFKh5tLMOQlUKKaujIjkAFPJ86GfpwRW
7rbl3nSJAwLqJQ1BQRIY1r7mvAhRH8q0s6PLbkqg6oXu04ZqHDDUWrM67K4E
lt+mr7u9ggNO+sdNIpIkMOhM3e+EikUIXM9zRvipBPF97ehqm7IIjza9uH4/
UwJ7yik2u/wWoWLrTFHcJwlc/3nyaLjGIrRtT2qTr5DAb4p3XUcXF2By1665
5FoJNJVM4wr4vgDkvfcNnjIk0LxYaxPNfQGuHtN59WZWAt02ruFWj5uHh8eb
v6zjlkSzWXq7md08vD4R0Pd+hSReT367o0hlHhgOteQSSUncbCZ+/PGzOdjg
6RhbayCJc9/TfQUTZ2G/t2D+/i2SqMIp8DtoPgtnL+X9bNwhidlR/Sel18zC
g4BlQq2HJfHyiQ/+tr4zMH4rOaTHQxJnDPS3fkU2vExt8eK8lsSpNzHS4Q+m
QL7JZJ+OqhRmHkgX2X95BPaWGR+4S5fC357jFx4WDYN/1q5DY/pSeK03KkWA
Zxj+3Nxhnr1dCv/6VZZM3BmEJNhqq3NSCvOXcL94/LQflJ6td9VJkMJZy1j/
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
RHuI+pZtPCAOyihyskshuZfIZ6VW3f1tymgpcz7vdD+RT4/bpmI7lbHv5NHz
pwfG4aNcf0W0iTIeUX/anTJE9FvVDiNRM2Xc+dPhueLoOMR6phRF7VfGaPZj
vY7xcQiV52wSOayMXWHXenqmiHxWW+XfMyf0nAji15sh8umVrydsRfhn7PPr
y/w4HFIQy75ro4yvO+tOv+KaAO0Ldc8iTytjmmh0/vEVEyCvSKUIOirjk8Dv
a7VWT8CqryEpEc7KKF6W1nJIZAL6FbfGhXsq4z5JRl+8/AQ0f02QWO2jjC5X
f1PKlSegwns26o6vMo5cCt20nToBKTW5t28HKuMrvY2mhzZMQKSP4IpVN5Qx
P8xTtQsnIEDJ5catUGXUeDGc9N14AqwvUvxvRijjb43P38stJ0BMOcY1NIGo
F0WvAbGrEyBYTrKZTlLG6sTuzBM3J2Cl/fM99qnKOHB6Rf+y+xPAlVqoji+U
cdbVStHmxQQMkpmd//KVMVhz9yddxgT0ljk0nP6gjOvPvJPd2j8Bf0+NFDcW
KSNj/EJqyjQRzxOuxMwKIv4ve79ZC09COZlsceaHMsoWXcgONJuEorIXO3/+
Ukbnha7ty45PwvtTevpGv5XxWuLsqXrnSch6skNY4S/h77JSb/qdSYgjn61p
GlHGwPe3R398mwQP8ivcya+Cz+yWNJ60mwKXMn2tN6tVsF3djCzpNQVnT32S
UxJWwcdBu1b1Bk+BzZP62QVJFTy2WVKx/OUUmJDH37ylqOAOvaenpWemQJG8
Tl1lmwrydAvzytydBpmyIomoHSq4nzPaXv5kGsRPGS9fYqKCUwKqyfveTcOq
J5adjH3EfOeY72dap+Gfkl9C9HEV3CpxJRCU/kGdUokQzyUVTJGXwNy0f1Bl
5Gn9wU8F5bk0SKR3/6DEXiXD66oKrr2qVEiv+Adv0sMMu0NUcK+D9THZ7n/w
unJTSMItFRSfmDafnvgHGX1D349EqKD+gz9L7LnZEKtx8EzFAxVs4L8yMCLH
hujdPDn+sSrYmhtlsYLKhjvO7+YNElUwa2ZV/ct1bLj6WvpeRpoKan/z4r25
jw2X6msYts9UcGZv1f7iY2zwGPVXlXylgs3Hld9cOs2G02s7P4S+IexjvjW5
XWKDzaH7vFvzVVC0YMP9l0FssPDadXCmUAVfXl7ncuYWGw7cn4nPLlJBroXz
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
          "]]}, Annotation[#, "Charting`Private`Tag$11997#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.713888353629238*^9, 3.7138884410305843`*^9, 3.7138911260994473`*^9, {
   3.7143105441111827`*^9, 
   3.714310582974249*^9}},ExpressionUUID->"bc6f9236-9335-432d-a2ce-\
7635ae3daf3f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ejercicio 6", "Subsection",
 CellChangeTimes->{
  3.7138891454368477`*^9, {3.7138891993849535`*^9, 
   3.713889199434615*^9}},ExpressionUUID->"d502c492-83e3-4efd-b329-\
8cfdcfab9517"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{"2", "Pi"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", "-", "0"}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "A"}], "-", 
       RowBox[{"(", "A", ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", 
       RowBox[{"(", 
        RowBox[{"T", "/", "2"}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0", "-", 
       RowBox[{"(", 
        RowBox[{"-", "A"}], ")"}]}], ")"}], 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{"t", "-", "T"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "0"], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "/", "T"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", "A", ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", 
          RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "A"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"(", 
           RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "A", ")"}], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "A"}], ")"}], 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "N"], "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "T"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "A", ")"}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", 
            RowBox[{"T", "/", "2"}]}], "}"}]}], "]"}], "+", 
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "A"}], ")"}], 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{"(", 
             RowBox[{"T", "/", "2"}], ")"}], ",", "T"}], "}"}]}], "]"}]}], 
       ")"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "1"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fs5", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["A", "0"], "/", "2"}], ")"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{
           SubscriptBox["A", "N"], "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", "T"}],
             "]"}]}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"Limit", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["B", "N"], "*", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "Pi", "*", "n", "*", "t"}], ")"}], "/", 
              "T"}], "]"}]}], ")"}], ",", 
          RowBox[{"n", "\[Rule]", "k"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"n", " ", "\[Epsilon]", " ", "Integers"}], " ", "&&", " ", 
      RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["E", "K"], "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "T"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "-", "Fs"}], ")"}], "^", "2"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"T", "\[Element]", "Reals"}], " ", "&&", " ", 
       RowBox[{"T", ">", "0"}]}]}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<f(t)= \>\"", ",", "f", ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=\>\"", ",", 
   SubscriptBox["A", "0"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= \>\"", ",", 
   SubscriptBox["A", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= \>\"", ",", 
   SubscriptBox["B", "N"], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= \>\"", ",", "Fs", ",", 
   "\"\<  ; 3 terminos\\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= \>\"", ",", 
   SubscriptBox["E", "K"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}], ",", 
     RowBox[{"Fs5", "/.", 
      RowBox[{"A", "\[Rule]", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "Pi"}], ",", 
     RowBox[{"3", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<f[t]\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 3 Terminos de la Serie\>\"",
       ",", "\"\<\!\(\*SubscriptBox[\(F\), \(s\)]\)[t]; 5 Terminos de la \
Serie\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.713889205708789*^9, 
  3.713889314735419*^9}},ExpressionUUID->"20e965f9-7f42-4289-a72c-\
61e085f8ea67"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"f(t)= \"\>", "\[InvisibleSpace]", 
   RowBox[{
    RowBox[{"A", " ", 
     RowBox[{"HeavisideTheta", "[", "t", "]"}]}], "+", 
    RowBox[{"A", " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Pi]"}], "+", "t"}], "]"}]}], "-", 
    RowBox[{"2", " ", "A", " ", 
     RowBox[{"HeavisideTheta", "[", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "+", "t"}], "]"}]}]}], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(0\\)]\\)=\"\
\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(b\\), \\(0\\)]\\)= \
\"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"A", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "\[Pi]"}], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "n", " ", "\[Pi]"}], "]"}]}], ")"}]}], 
    RowBox[{"n", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(F\\), \
\\(s\\)]\\)(t)= \"\>", "\[InvisibleSpace]", 
   FractionBox[
    RowBox[{"4", " ", "A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"3", " ", "t"}], "]"}]}], ")"}]}], 
    RowBox[{"3", " ", "\[Pi]"}]], 
   "\[InvisibleSpace]", "\<\"  ; 3 terminos\\n\\!\\(\\*SubscriptBox[\\(E\\), \
\\(k\\)]\\)= \"\>", "\[InvisibleSpace]", 
   RowBox[{"0.09936725651255307`", " ", 
    SuperscriptBox["A", "2"]}]}],
  SequenceForm[
  "f(t)= ", $CellContext`A HeavisideTheta[$CellContext`t] + $CellContext`A 
    HeavisideTheta[(-2) Pi + $CellContext`t] - 2 $CellContext`A 
   HeavisideTheta[-Pi + $CellContext`t], 
   "\n\!\(\*SubscriptBox[\(a\), \(0\)]\)=", 0, 
   "\n\!\(\*SubscriptBox[\(a\), \(n\)]\)= ", $CellContext`A \
$CellContext`n^(-1) 
   Pi^(-1) (2 Sin[$CellContext`n Pi] - Sin[2 $CellContext`n Pi]), 
   "\n\!\(\*SubscriptBox[\(b\), \(0\)]\)= ", $CellContext`A \
$CellContext`n^(-1) 
   Pi^(-1) (1 - 2 Cos[$CellContext`n Pi] + Cos[2 $CellContext`n Pi]), 
   "\n\!\(\*SubscriptBox[\(F\), \(s\)]\)(t)= ", Rational[4, 3] $CellContext`A 
   Pi^(-1) (3 Sin[$CellContext`t] + Sin[3 $CellContext`t]), 
   "  ; 3 terminos\n\!\(\*SubscriptBox[\(E\), \(k\)]\)= ", 
   0.09936725651255307 $CellContext`A^2],
  Editable->False]], "Print",
 CellChangeTimes->{{3.713889304022746*^9, 
  3.7138893174740934`*^9}},ExpressionUUID->"94a3e283-d61e-4823-9102-\
21dc37aaf55c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxN0HswFAgcB/CNsPJYFqtEniHrVs5jTMg6VIa0Gj1OHhG75I4zZ6RaV1cn
Iltt6nJtcezZPddEwrmwpEGWWyySct4lK49IiqW7m6nfr9/Md37z+e/7+5lG
JuyNViAQCJz/8v9mRz+xXzZVrSd8nDD3igsUAzRdjztuT0YrNvrdjFFAZ1rU
ER+PEMG5o78NlhaiKyO+z2ZuRs+Eak50WquAxSfvdtooKYFTObMnJUqK4FGG
tsYJrTXgw4nb8/YMr9R9crENV0CXvQc/pNWTnW8tgOncu36uzNfgf0QVpNtT
MnDvdM1uWdQIOHqMZSF42g1OlrLiqDx0Rj2rrCQUXcxj0auGusDTQayQlhdS
cEojM2dyrgNM2d1KPEwRg122tF6LyW0BH1JqtUg0ROfXiulnzB6Bt9DEKXxa
E9iN1PLy5Y4GcFNB9uXR6XKwaMqrqWLwHvhPl6Wl9I4ysFDCjLItKwWTF07F
y2RCsGLWq15OWxH4jcnXng53+ODH/l/qshPzwZxG92V6EQ+c8JoiOR97HRzF
5Y47D10EW8m8sx8x08E9Z6ejy5+mYl9mUWRJeyz+M8lEQ9eW4fGRdGK4h3P4
uzPgBwe+Xbi5cBlsFLR2n3vSr+BgeWDJH1O/g4sCvC+UTdSCL7Un5O+Mbwbz
a/QsWHld4FOX548Vpz8Dr6iYi0n7X4ATMxprbOqnwQ0G7KBs/3kw27J6nMBZ
BKftalgcOLeM/Y1n+FXdH8BtfrZfeaoo0D95gOzz3bMPiuDz5bPfzJspg+cy
U9YFm6mAQyIIwnpTIpg/pLby+hb6Vbj+XnNDVfCQfgzrrTm4vqe9it1CRYvT
Vbk8B7TII1iQ4IoWlCx36vmhLxnflFcHoyM/DAYST6AdB80EQbnoJ7eEgVO9
aHYYTZ5GWQc+KOZkW1mqgZ2cZza1OKmD9Tbonn6wVRO8a/J570aqFpg6x5BL
XbTBBatTdVGOZHB0SvdRJx8dcM3iq/IhL13wtrwctQx3PfDa8jTfeH8K3icR
Wtr56oNdyINEOylaY7/eJO3QenDIe/nZzTfQt3ljhobP0EHxB2P1l9Fyj7YK
8sYNYPv7wcZkYzTTcSJD2xxMuHHn2JyWFbrDWjlEi4pWKsxpJNmhtxmZ25Ec
0HxtuoKmK7ovSxKn4YHWVA7tUfdCpywdF6r5of1G7wWoHkKb/JIkfBOGfstw
UhiKRBeIKisqj6Lf5f5lGHXisz6MOpkoF71aKz6X9ARden1YNLjPABxRfZCy
EL0RXDS6RuP5EUOwy/E3Mp1jRuBZ5+Se7WmbwG5LW8K9fzQGx13VifH2NQGf
2Uqd7XqEvh2e+cOwjymY7cM5zfkbTaFRpdb+ZmCjkRqTsAC0xbWAhCsMtMNq
ovpqEJohqdrRFYrOit9RnZqAJpRE8KVcNPHI/JzKVTRJP83T/Wf0plPCAcEN
tOuemfWpfHTyDDvbqhKdWqjZH1KF/ulAvg33PvpK3cNmuQhdenGdgrQZXeXF
Y6iI0XWLX+S5taEl4YFugg50j85oZr8U3d+c1Kfdgx47qWy9sxc9aXc9md2H
/hc9eyiX
          "]]}, Annotation[#, "Charting`Private`Tag$97582#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$97582#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$97582#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"f[t]\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 3 Terminos de la \
Serie\"", 
       "\"\\!\\(\\*SubscriptBox[\\(F\\), \\(s\\)]\\)[t]; 5 Terminos de la \
Serie\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.713889304219247*^9, 
  3.7138893177165956`*^9}},ExpressionUUID->"56ff03c7-94f9-4bf4-a551-\
095ed563f2ef"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 4, 59, "Subsection", "ExpressionUUID" -> \
"1d1188d8-776f-439b-a013-90d379de8c0b"],
Cell[799, 28, 39482, 658, 322, "Input", "ExpressionUUID" -> \
"be54e199-b08e-4fdf-92e2-3dd95ce3b0d4"],
Cell[CellGroupData[{
Cell[40306, 690, 5910, 183, 240, "Input", "ExpressionUUID" -> \
"3a80a1d5-99df-44d8-b855-e948842f6767"],
Cell[46219, 875, 42534, 752, 240, "Output", "ExpressionUUID" -> \
"8ab6710a-00b0-4165-be26-92abe44ed432"],
Cell[88756, 1629, 3096, 76, 186, "Print", "ExpressionUUID" -> \
"1e5ef04b-ff1b-4e53-9780-4dcd230402ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91901, 1711, 208, 3, 49, "Subsection", "ExpressionUUID" -> \
"2354ce20-f040-407c-9409-052f90345277"],
Cell[CellGroupData[{
Cell[92134, 1718, 9484, 276, 202, "Input", "ExpressionUUID" -> \
"d481171c-3a97-4510-b3af-44b3415461fb"],
Cell[101621, 1996, 2986, 71, 213, "Print", "ExpressionUUID" -> \
"b71f8709-6fb8-4186-b75e-6dc6badebe15"],
Cell[104610, 2069, 78773, 1361, 240, "Output", "ExpressionUUID" -> \
"ec36ea16-85e1-4be2-a1c1-afc0bd4b29a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183432, 3436, 161, 3, 49, "Subsection", "ExpressionUUID" -> \
"63b4e40b-a649-45a0-81ed-f15aa6f00e99"],
Cell[CellGroupData[{
Cell[183618, 3443, 10502, 307, 240, "Input", "ExpressionUUID" -> \
"70a483b5-fe7e-4885-8e3d-a92374574790"],
Cell[194123, 3752, 3224, 77, 210, "Print", "ExpressionUUID" -> \
"04cbfe67-652a-4526-9795-19526a079c9a"],
Cell[197350, 3831, 79643, 1378, 240, "Output", "ExpressionUUID" -> \
"ea5ea753-a395-4181-9067-d3a084e4ac2c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277042, 5215, 159, 3, 49, "Subsection", "ExpressionUUID" -> \
"7f812341-2836-4c3c-8b10-44a7eabd6d9d"],
Cell[CellGroupData[{
Cell[277226, 5222, 8942, 269, 221, "Input", "ExpressionUUID" -> \
"eac5bbf3-dbff-4117-ad78-632b55bfc74e"],
Cell[286171, 5493, 2704, 67, 202, "Print", "ExpressionUUID" -> \
"c036cd2c-74ab-4da0-9b7d-e26139e5e6e4"],
Cell[288878, 5562, 85964, 1481, 222, "Output", "ExpressionUUID" -> \
"66476d82-52ff-4e1e-ba81-19bd5d253178"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[374891, 7049, 163, 3, 49, "Subsection", "ExpressionUUID" -> \
"8c63b575-af13-4575-8464-95e8ee88eaa5"],
Cell[CellGroupData[{
Cell[375079, 7056, 10455, 312, 240, "Input", "ExpressionUUID" -> \
"53af8747-81c8-4073-b46c-3021e418a8f6"],
Cell[385537, 7370, 4055, 107, 213, "Print", "ExpressionUUID" -> \
"40522190-4c17-4c12-85b7-1f71d9ca4ef5"],
Cell[389595, 7479, 40360, 733, 245, "Output", "ExpressionUUID" -> \
"784c1819-d101-4db1-87fc-a62c6279e9dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[430004, 8218, 163, 3, 49, "Subsection", "ExpressionUUID" -> \
"0539cc66-c0c0-498e-8c9b-22d798cc7e43"],
Cell[CellGroupData[{
Cell[430192, 8225, 8139, 248, 221, "Input", "ExpressionUUID" -> \
"8c8d11b4-79f8-413a-a764-ed3582afed8c"],
Cell[438334, 8475, 3685, 95, 196, "Print", "ExpressionUUID" -> \
"888990fc-1ba1-44e9-9be3-fa7e93dc574e"],
Cell[442022, 8572, 95581, 1638, 277, "Output", "ExpressionUUID" -> \
"bc6f9236-9335-432d-a2ce-7635ae3daf3f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[537652, 10216, 189, 4, 49, "Subsection", "ExpressionUUID" -> \
"d502c492-83e3-4efd-b329-8cfdcfab9517"],
Cell[CellGroupData[{
Cell[537866, 10224, 8892, 271, 221, "Input", "ExpressionUUID" -> \
"20e965f9-7f42-4289-a72c-61e085f8ea67"],
Cell[546761, 10497, 2960, 74, 173, "Print", "ExpressionUUID" -> \
"94a3e283-d61e-4823-9102-21dc37aaf55c"],
Cell[549724, 10573, 78400, 1356, 240, "Output", "ExpressionUUID" -> \
"56ff03c7-94f9-4bf4-a551-095ed563f2ef"]
}, Open  ]]
}, Open  ]]
}
]
*)

